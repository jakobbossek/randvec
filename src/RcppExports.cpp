// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rrpv_normalization_C
NumericMatrix rrpv_normalization_C(int n, int d);
RcppExport SEXP _rpv_rrpv_normalization_C(SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(rrpv_normalization_C(n, d));
    return rcpp_result_gen;
END_RCPP
}
// rrpv_iterative_C
NumericMatrix rrpv_iterative_C(int n, int d);
RcppExport SEXP _rpv_rrpv_iterative_C(SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(rrpv_iterative_C(n, d));
    return rcpp_result_gen;
END_RCPP
}
// rrpv_simplex_C
NumericMatrix rrpv_simplex_C(int n, int d);
RcppExport SEXP _rpv_rrpv_simplex_C(SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(rrpv_simplex_C(n, d));
    return rcpp_result_gen;
END_RCPP
}
// rrpv_trigonometric_C
NumericMatrix rrpv_trigonometric_C(int n, int d);
RcppExport SEXP _rpv_rrpv_trigonometric_C(SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(rrpv_trigonometric_C(n, d));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rpv_rrpv_normalization_C", (DL_FUNC) &_rpv_rrpv_normalization_C, 2},
    {"_rpv_rrpv_iterative_C", (DL_FUNC) &_rpv_rrpv_iterative_C, 2},
    {"_rpv_rrpv_simplex_C", (DL_FUNC) &_rpv_rrpv_simplex_C, 2},
    {"_rpv_rrpv_trigonometric_C", (DL_FUNC) &_rpv_rrpv_trigonometric_C, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_rpv(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
